version: 2

aliases:
  - &restore-cache
      keys:
        - dependency-cache-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
        - dependency-cache

  - &save-cache
      keys:
        - dependency-cache-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
        - dependency-cache
      paths:
        - node_modules
        - packages/components/node_modules
        - packages/components/.stencil
        - packages/design-tokens/node_modules
        - packages/icons/node_modules
        - packages/icons/.stencil
        - packages/fonts/node_modules
        - packages/docs/node_modules
        - packages/styles/node_modules

commands:
  create_concatenated_package_lock:
    description: "Concatenate all package-lock.json files recognized by lerna.js into single file. File is used as checksum source for part of caching key."
    parameters:
      filename:
        type: string
    steps:
      - run:
          name: Combine package-lock.json files to single file
          command: npx lerna list -p -a | awk -F packages '{printf "\"packages%s/package-lock.json\" ", $2}' | xargs cat > << parameters.filename >>
                 
defaults: &defaults
  docker:
    - image: circleci/node:10-browsers
  working_directory: ~/repo

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - create_concatenated_package_lock:
        filename: combined-package-lock.txt
        ## Use combined-package-lock.text in cache key
      - restore_cache: *restore-cache
      - run: npm install
      - save_cache: *save-cache
      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*"

  build-components:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache: *restore-cache
      - restore_cache: *restore-cache
      - run:
          command: npm install
          working_directory: ~/repo/packages/components
      - save_cache: *save-cache
      - run:
          command: npm run build -- --ci
          working_directory: ~/repo/packages/components
      - save_cache: *save-cache
      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*"

  build-styles:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache: *restore-cache
      - run:
          command: npm install
          working_directory: ~/repo/packages/styles
      - save_cache: *save-cache
      - run:
          command: npm run build -- --ci
          working_directory: ~/repo/packages/styles
      - save_cache: *save-cache
      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*"

  build-design-tokens:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache: *restore-cache
      - run:
          command: npm install
          working_directory: ~/repo/packages/design-tokens
      - save_cache: *save-cache
      - run:
          command: npm run build
          working_directory: ~/repo/packages/design-tokens
      - save_cache: *save-cache
      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*"

  build-icons:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache: *restore-cache
      - run:
          command: npm install
          working_directory: ~/repo/packages/icons
      - save_cache: *save-cache
      - run:
          command: npm run build -- --ci
          working_directory: ~/repo/packages/icons
      - save_cache: *save-cache
      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*"
  
  test-styles-clean-build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Checking clean build
          command: git diff --exit-code
          working_directory: ~/repo/packages/styles

  test-components-clean-build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Checking clean build
          command: git diff --exit-code
          working_directory: ~/repo/packages/components

  test-design-tokens-clean-build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Checking clean build
          command: git diff --exit-code
          working_directory: ~/repo/packages/design-tokens

  test-icons-clean-build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Checking clean build
          command: git diff --exit-code
          working_directory: ~/repo/packages/icons

  test-styles-lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          command: npm run lint.sass
          working_directory: ~/repo/packages/styles

  test-components-lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          command: npm run lint
          working_directory: ~/repo/packages/components

  test-components-spec:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          command: npm run test --ci
          working_directory: ~/repo/packages/components

  publish:
    <<: *defaults
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache: *restore-cache
      - run:
          name: Build
          command: npm run build
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Ignore files
          command: git update-index --assume-unchanged ~/repo/.npmrc
      - run:
          name: Publish
          command: npm run release

workflows:
  version: 2
  build:
    jobs:
      - build
      - build-components:
          requires: [build]
      - build-styles:
          requires: [build]
      - build-icons:
          requires: [build]
      - build-design-tokens:
          requires: [build]
      - test-components-clean-build:
          requires: [build-components]
      - test-styles-clean-build:
          requires: [build-styles]
      - test-icons-clean-build:
          requires: [build-icons]
      - test-design-tokens-clean-build:
          requires: [build-design-tokens]
      - test-components-lint:
          requires: [test-components-clean-build]
      - test-styles-lint:
          requires: [test-styles-clean-build]
      - test-components-spec:
          requires: [test-components-clean-build]
      - publish:
          requires:
            - test-icons-clean-build
            - test-design-tokens-clean-build
            - test-components-lint
            - test-styles-lint
            - test-components-spec
          filters:
            branches:
              only: master
  
